map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  '' $scheme;
}

map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}

proxy_http_version 1.1;
proxy_buffering off;
proxy_set_header Host $http_host;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $proxy_connection;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;

{{range $dir := lsdir "/services/http"}}
  {{$service := base $dir}}
  {{$host := printf "/services/http/%s/host" $service}}
  {{$auth := printf "/services/http/%s/auth" $service}}
  {{$ssl := printf "/services/http/%s/ssl/crt" $service}}
  {{$endpoints := printf "/services/http/%s/endpoints/" $service}}

  {{if ne (len (ls $endpoints)) 0}}
    upstream {{$service}} {
      {{range ls $endpoints}}
        {{$key := printf "/services/http/%s/endpoints/%s" $service .}}
        server {{$getv $key}};
      {{end}}
    }
  {{else}}
    upstream {{$service}} {
      server localhost;
    }
  {{end}}

  server {
    listen 80;
    server_name {{getv $host}};
    location / {
      proxy_pass http://{{$service}};
      {{if exists $auth}}
        {{$htpassword := printf "/etc/nginx/keys/%s.htpasswd" $service}}
        auth_basic "Authorization Required";
        auth_basic_user_file {{$htpassword}};
      {{end}}
    }
  }

  server {
    listen 443 ssl http2;
    server_name {{getv $host}};
    client_max_body_size 400m;
    {{if exists $ssl}}
      ssl on;
      ssl_certificate /etc/nginx/keys/{{$service}}.crt;
      ssl_certificate_key /etc/nginx/keys/{{$service}}.key;
      ssl_session_timeout 10m;
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
      ssl_session_cache shared:SSL:10m;
      ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
      ssl_prefer_server_ciphers on;
      ssl_buffer_size 1400;
      add_header Strict-Transport-Security "max-age=31536000";
    {{end}}
    location / {
      proxy_pass http://{{$service}};
      {{if exists $auth}}
        {{$htpassword := printf "/etc/nginx/keys/%s.htpasswd" $service}}
        auth_basic "Authorization Required";
        auth_basic_user_file {{$htpassword}};
      {{end}}
    }
  }

{{end}}
